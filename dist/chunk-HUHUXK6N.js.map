{"version":3,"sources":["../src/util/capitalize.ts","../src/util/createCommand.ts","../src/util/createEvent.ts","../src/util/formatBytes.ts","../src/util/normalizeError.ts","../src/util/randomNumber.ts","../src/util/sendError.ts","../src/util/watchChanges.ts","../src/util/index.ts"],"sourcesContent":["/**\n * Capitalize a string.\n * @param str - The string to capitalize\n * @returns The capitalized string\n */\nexport const capitalize = (str: string) =>\n\tstr.charAt(0).toUpperCase() + str.slice(1);\n\nexport default capitalize;\n","import type {\r\n\tApplicationCommandOptionType,\r\n\tApplicationCommandType,\r\n} from \"discord-api-types/v10\";\r\nimport type { CommandOptions } from \"./types\";\r\n\r\n/**\r\n * This utility function is just to infer automatically the command type from the data.\r\n * @param command - The command data\r\n * @returns The command data\r\n */\r\nexport const createCommand = <\r\n\tT extends ApplicationCommandType,\r\n\tO extends ApplicationCommandOptionType,\r\n\tN extends string = string\r\n>(\r\n\tcommand: CommandOptions<T, O, N>\r\n) => command;\r\n\r\nexport default createCommand;\r\n","import type { ClientEvents } from \"discord.js\";\nimport type { EventOptions } from \"./types\";\n\n/**\n * This utility function is just to infer automatically event types from the data.\n * @param event - The event data\n * @returns The event data\n */\nexport const createEvent = <K extends keyof ClientEvents>(\n\tevent: EventOptions<K>\n) => event;\n\nexport default createEvent;\n","const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n\r\n/**\r\n * Formats a number of bytes into a human readable string.\r\n * @param bytes - The number of bytes to format\r\n * @param k - The constant to multiply the number by\r\n * @param space - Whether to add a space between the number and the unit\r\n * @returns The formatted bytes\r\n */\r\nexport const formatBytes = (bytes: number, k = 1024, space = true) => {\r\n\tif (bytes === 0) return \"0 Bytes\";\r\n\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n\treturn `${Math.round(bytes / Math.pow(k, i))}${space ? \" \" : \"\"}${sizes[i]}`;\r\n};\r\n\r\nexport default formatBytes;\r\n","import CustomClient from \"./CustomClient\";\r\n\r\n/**\r\n * Normalize a promise rejection to a plain error object.\r\n * @param err - The error to normalize\r\n * @returns An Error object\r\n */\r\nexport const normalizeError = (err: unknown) => {\r\n\tCustomClient.printToStderr(err);\r\n\treturn err instanceof Error\r\n\t\t? err\r\n\t\t: new Error(typeof err === \"string\" ? err : \"Unknown error\");\r\n};\r\n\r\nexport default normalizeError;\r\n","/**\r\n * Get a random number between a min and max.\r\n * @param min - The minimum number\r\n * @param max - The maximum number\r\n * @returns A random number between min and max\r\n */\r\nexport const randomNumber: {\r\n\t(min: number, max: number): number;\r\n\t(): number;\r\n} = (min?: number, max?: number) =>\r\n\tmin === undefined\r\n\t\t? Math.random()\r\n\t\t: Math.floor(Math.random() * (max! - min + 1)) + min;\r\n\r\nexport default randomNumber;\r\n","import type { ReceivedInteraction } from \".\";\n\nexport const sendError = (interaction: ReceivedInteraction, error: Error) =>\n\tinteraction[interaction.deferred ? \"editReply\" : \"reply\"]({\n\t\tcontent: `Si Ã¨ verificato un errore: \\`${error.message.slice(0, 1000)}\\``,\n\t\tephemeral: true,\n\t});\n\nexport default sendError;\n","/* eslint-disable node/no-unpublished-import */\nimport { ApplicationCommandType } from \"discord.js\";\nimport { unlink, watch } from \"node:fs/promises\";\nimport { join } from \"node:path\";\nimport { cwd } from \"node:process\";\nimport type { build as Build } from \"tsup\";\nimport type { CommandOptions, EventOptions } from \".\";\nimport Command from \"./Command\";\nimport Constants from \"./Constants\";\nimport CustomClient from \"./CustomClient\";\nimport Event from \"./Event\";\n\nconst commandsFolder = join(cwd(), `src/${Constants.commandsFolderName}`);\nconst eventsFolder = join(cwd(), `src/${Constants.eventsFolderName}`);\nconst freshImport = <T>(path: string) =>\n\t(import(`${path.replace(/\\.ts$/, \".js\")}?${Date.now()}`) as Promise<T>).catch(\n\t\t() => undefined\n\t);\nconst watchCommands = async (client: CustomClient, build: typeof Build) => {\n\tfor await (const event of watch(commandsFolder, {\n\t\tencoding: \"utf8\",\n\t\tpersistent: false,\n\t})) {\n\t\tconst oldCommand = (\n\t\t\tawait freshImport<{\n\t\t\t\tcommand: CommandOptions;\n\t\t\t}>(`./${Constants.commandsFolderName}/${event.filename}`)\n\t\t)?.command;\n\n\t\tif (event.eventType === \"rename\" && oldCommand) {\n\t\t\tconst { name } =\n\t\t\t\toldCommand.data.find(\n\t\t\t\t\t({ type }) => type === ApplicationCommandType.ChatInput\n\t\t\t\t) ?? oldCommand.data[0];\n\t\t\tconst ok = client.commands.delete(name);\n\n\t\t\tunlink(\n\t\t\t\tnew URL(\n\t\t\t\t\t`${Constants.commandsFolderName}/${event.filename.replace(\n\t\t\t\t\t\t/\\.ts/,\n\t\t\t\t\t\t\".js\"\n\t\t\t\t\t)}`,\n\t\t\t\t\timport.meta.url\n\t\t\t\t)\n\t\t\t).catch(CustomClient.printToStderr);\n\t\t\tCustomClient.printToStdout(\n\t\t\t\tok\n\t\t\t\t\t? `Deleted command ${name} (${event.filename})`\n\t\t\t\t\t: `Couldn't find command ${name} (${event.filename})`\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\t\tconst failed = await build({\n\t\t\tconfig: false,\n\t\t\tentry: [`src/${Constants.commandsFolderName}/${event.filename}`],\n\t\t\tformat: \"esm\",\n\t\t\texternal: [\"tsup\"],\n\t\t\tminify: true,\n\t\t\tplatform: \"node\",\n\t\t\tsourcemap: true,\n\t\t\ttarget: \"ESNext\",\n\t\t\toutDir: join(cwd(), \"dist/commands\"),\n\t\t}).catch(() => {\n\t\t\tCustomClient.printToStderr(`Failed to build command ${event.filename}`);\n\t\t\treturn true as const;\n\t\t});\n\n\t\tif (failed) continue;\n\t\tconst newCommand = (\n\t\t\tawait freshImport<{\n\t\t\t\tcommand: CommandOptions;\n\t\t\t}>(`./${Constants.commandsFolderName}/${event.filename}`)\n\t\t)?.command;\n\n\t\tif (newCommand) {\n\t\t\tif (oldCommand)\n\t\t\t\tclient.commands.delete(\n\t\t\t\t\toldCommand.data.find(\n\t\t\t\t\t\t({ type }) => type === ApplicationCommandType.ChatInput\n\t\t\t\t\t)?.name ?? oldCommand.data[0].name\n\t\t\t\t);\n\t\t\tconst { name } =\n\t\t\t\tnewCommand.data.find(\n\t\t\t\t\t({ type }) => type === ApplicationCommandType.ChatInput\n\t\t\t\t) ?? newCommand.data[0];\n\n\t\t\tclient.commands.set(name, new Command(client, newCommand));\n\t\t\tCustomClient.printToStdout(\n\t\t\t\t`${oldCommand ? \"Reloaded\" : \"Added\"} command ${name} (${\n\t\t\t\t\tevent.filename\n\t\t\t\t})`\n\t\t\t);\n\t\t} else\n\t\t\tCustomClient.printToStderr(`Cannot find new command ${event.filename}`);\n\t}\n};\nconst watchEvents = async (client: CustomClient, build: typeof Build) => {\n\tfor await (const event of watch(eventsFolder, {\n\t\tencoding: \"utf8\",\n\t\tpersistent: false,\n\t})) {\n\t\tconst oldEvent = (\n\t\t\tawait freshImport<{\n\t\t\t\tevent: EventOptions;\n\t\t\t}>(`./${Constants.eventsFolderName}/${event.filename}`)\n\t\t)?.event;\n\n\t\tif (event.eventType === \"rename\" && oldEvent) {\n\t\t\tclient.events.get(oldEvent.name)?.removeListeners();\n\t\t\tconst ok = client.events.delete(oldEvent.name);\n\n\t\t\tunlink(\n\t\t\t\tnew URL(\n\t\t\t\t\t`${Constants.eventsFolderName}/${event.filename.replace(\n\t\t\t\t\t\t/\\.ts/,\n\t\t\t\t\t\t\".js\"\n\t\t\t\t\t)}`,\n\t\t\t\t\timport.meta.url\n\t\t\t\t)\n\t\t\t).catch(CustomClient.printToStderr);\n\t\t\tCustomClient.printToStdout(\n\t\t\t\tok\n\t\t\t\t\t? `Deleted event ${oldEvent.name} (${event.filename})`\n\t\t\t\t\t: `Couldn't find event ${oldEvent.name} (${event.filename})`\n\t\t\t);\n\t\t\tcontinue;\n\t\t}\n\t\tconst failed = await build({\n\t\t\tconfig: false,\n\t\t\tentry: [`src/${Constants.eventsFolderName}/${event.filename}`],\n\t\t\tformat: \"esm\",\n\t\t\texternal: [\"tsup\"],\n\t\t\tminify: true,\n\t\t\tplatform: \"node\",\n\t\t\tsourcemap: true,\n\t\t\ttarget: \"ESNext\",\n\t\t\toutDir: join(cwd(), \"dist/events\"),\n\t\t}).catch(() => {\n\t\t\tCustomClient.printToStderr(`Failed to build event ${event.filename}`);\n\t\t\treturn true as const;\n\t\t});\n\n\t\tif (failed) continue;\n\t\tconst newEvent = (\n\t\t\tawait freshImport<{\n\t\t\t\tevent: EventOptions;\n\t\t\t}>(`./${Constants.eventsFolderName}/${event.filename}`)\n\t\t)?.event;\n\n\t\tif (newEvent) {\n\t\t\tif (oldEvent) {\n\t\t\t\tclient.events.get(oldEvent.name)?.removeListeners();\n\t\t\t\tclient.events.delete(oldEvent.name);\n\t\t\t}\n\t\t\tclient.events.set(newEvent.name, new Event(client, newEvent));\n\t\t\tCustomClient.printToStdout(\n\t\t\t\t`${oldEvent ? \"Reloaded\" : \"Added\"} event ${newEvent.name} (${\n\t\t\t\t\tevent.filename\n\t\t\t\t})`\n\t\t\t);\n\t\t} else\n\t\t\tCustomClient.printToStderr(`Cannot find new event ${event.filename}`);\n\t}\n};\n\nexport const watchChanges = async (client: CustomClient) => {\n\tconst tsup = await import(\"tsup\").catch(() => {\n\t\tCustomClient.printToStderr(\n\t\t\t\"Failed to load tsup, not watching for changes...\"\n\t\t);\n\t});\n\n\tif (tsup)\n\t\tPromise.all([\n\t\t\twatchCommands(client, tsup.build),\n\t\t\twatchEvents(client, tsup.build),\n\t\t]).catch(CustomClient.printToStderr);\n};\n\nexport default watchChanges;\n","import Constants from \"./Constants\";\r\n\r\nexport * from \"./calculateRam\";\r\nexport * from \"./capitalize\";\r\nexport * from \"./cast\";\r\nexport * from \"./colors\";\r\nexport * from \"./Command\";\r\nexport * from \"./Constants\";\r\nexport * from \"./createCommand\";\r\nexport * from \"./createEvent\";\r\nexport * from \"./CustomClient\";\r\nexport * from \"./eval\";\r\nexport * from \"./Event\";\r\nexport * from \"./formatBytes\";\r\nexport * from \"./interactions\";\r\nexport * from \"./loadCommands\";\r\nexport * from \"./loadEvents\";\r\nexport * from \"./normalizeError\";\r\nexport * from \"./Queue\";\r\nexport * from \"./randomNumber\";\r\nexport * from \"./sendError\";\r\nexport * from \"./types\";\r\nexport * from \"./watchChanges\";\r\n\r\nexport default Constants;\r\n"],"mappings":"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","names":[]}