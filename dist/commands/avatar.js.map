{"version":3,"sources":["../../src/commands/avatar.ts"],"sourcesContent":["import {\r\n\tApplicationCommandOptionType,\r\n\tApplicationCommandType,\r\n\tButtonStyle,\r\n\tComponentType,\r\n} from \"discord-api-types/v10\";\r\nimport { escapeMarkdown, GuildMember } from \"discord.js\";\r\nimport { createCommand } from \"../util\";\r\n\r\nexport const command = createCommand({\r\n\tdata: [\r\n\t\t{\r\n\t\t\tname: \"avatar\",\r\n\t\t\tdescription: \"Mostra l'avatar di un utente\",\r\n\t\t\ttype: ApplicationCommandType.ChatInput,\r\n\t\t\toptions: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"user\",\r\n\t\t\t\t\tdescription: \"L'utente di cui mostrare l'avatar\",\r\n\t\t\t\t\ttype: ApplicationCommandOptionType.User,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\tasync run(interaction) {\r\n\t\tconst { guild } = interaction;\r\n\t\tconst option =\r\n\t\t\tinteraction.options.data.find(\r\n\t\t\t\t(o) => o.type === ApplicationCommandOptionType.User\r\n\t\t\t) ?? interaction;\r\n\t\tconst user = option.user ?? interaction.user;\r\n\t\tconst member = option.member\r\n\t\t\t? option.member\r\n\t\t\t: guild\r\n\t\t\t? await guild.members.fetch(user.id).catch(() => user)\r\n\t\t\t: user;\r\n\t\tconst url =\r\n\t\t\t\"client\" in member\r\n\t\t\t\t? member.displayAvatarURL({\r\n\t\t\t\t\t\textension: \"png\",\r\n\t\t\t\t\t\tsize: 4096,\r\n\t\t\t\t  })\r\n\t\t\t\t: member.avatar != null\r\n\t\t\t\t? this.client.rest.cdn.guildMemberAvatar(\r\n\t\t\t\t\t\tguild!.id,\r\n\t\t\t\t\t\tuser.id,\r\n\t\t\t\t\t\tmember.avatar,\r\n\t\t\t\t\t\t{ size: 4096, extension: \"png\" }\r\n\t\t\t\t  )\r\n\t\t\t\t: user.displayAvatarURL({\r\n\t\t\t\t\t\textension: \"png\",\r\n\t\t\t\t\t\tsize: 4096,\r\n\t\t\t\t  });\r\n\r\n\t\tawait interaction.reply({\r\n\t\t\tcontent: `Avatar di **[${escapeMarkdown(\r\n\t\t\t\tmember instanceof GuildMember\r\n\t\t\t\t\t? member.displayName\r\n\t\t\t\t\t: \"nick\" in member && member.nick != null\r\n\t\t\t\t\t? member.nick\r\n\t\t\t\t\t: user.username\r\n\t\t\t)}](${url} )**:`,\r\n\t\t\tcomponents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: ComponentType.ActionRow,\r\n\t\t\t\t\tcomponents: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: ComponentType.Button,\r\n\t\t\t\t\t\t\turl,\r\n\t\t\t\t\t\t\tstyle: ButtonStyle.Link,\r\n\t\t\t\t\t\t\tlabel: \"Apri l'originale\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t},\r\n});\r\n"],"mappings":"sEAAA,qIAMA,6DAGO,GAAM,GAAU,EAAc,CACpC,KAAM,CACL,CACC,KAAM,SACN,YAAa,+BACb,KAAM,EAAuB,UAC7B,QAAS,CACR,CACC,KAAM,OACN,YAAa,oCACb,KAAM,EAA6B,IACpC,CACD,CACD,CACD,EACA,KAAM,KAAI,EAAa,CACtB,GAAM,CAAE,SAAU,EACZ,EACL,EAAY,QAAQ,KAAK,KACxB,AAAC,GAAM,EAAE,OAAS,EAA6B,IAChD,GAAK,EACA,EAAO,EAAO,MAAQ,EAAY,KAClC,EAAS,EAAO,OACnB,EAAO,OACP,EACA,KAAM,GAAM,QAAQ,MAAM,EAAK,EAAE,EAAE,MAAM,IAAM,CAAI,EACnD,EACG,EACL,UAAY,GACT,EAAO,iBAAiB,CACxB,UAAW,MACX,KAAM,IACN,CAAC,EACD,EAAO,QAAU,KACjB,KAAK,OAAO,KAAK,IAAI,kBACrB,EAAO,GACP,EAAK,GACL,EAAO,OACP,CAAE,KAAM,KAAM,UAAW,KAAM,CAC/B,EACA,EAAK,iBAAiB,CACtB,UAAW,MACX,KAAM,IACN,CAAC,EAEL,KAAM,GAAY,MAAM,CACvB,QAAS,gBAAgB,EACxB,YAAkB,GACf,EAAO,YACP,QAAU,IAAU,EAAO,MAAQ,KACnC,EAAO,KACP,EAAK,QACT,MAAM,SACN,WAAY,CACX,CACC,KAAM,EAAc,UACpB,WAAY,CACX,CACC,KAAM,EAAc,OACpB,MACA,MAAO,EAAY,KACnB,MAAO,kBACR,CACD,CACD,CACD,CACD,CAAC,CACF,CACD,CAAC","names":[]}