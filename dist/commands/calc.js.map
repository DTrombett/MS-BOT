{"version":3,"sources":["../../src/commands/calc.ts"],"sourcesContent":["import { SlashCommandBuilder } from \"@discordjs/builders\";\r\nimport type { CommandOptions } from \"../util\";\r\nimport { calc } from \"../util\";\r\n\r\nenum Options {\r\n\texpr = \"expr\",\r\n\tfractions = \"fractions\",\r\n}\r\n\r\nexport const command: CommandOptions = {\r\n\tdata: new SlashCommandBuilder()\r\n\t\t.setName(\"calc\")\r\n\t\t.setDescription(\"Calcola una espressione matematica\")\r\n\t\t.addStringOption((expr) =>\r\n\t\t\texpr\r\n\t\t\t\t.setName(Options.expr)\r\n\t\t\t\t.setDescription(\"L'espressione da calcolare\")\r\n\t\t\t\t.setRequired(true)\r\n\t\t)\r\n\t\t.addBooleanOption((fractions) =>\r\n\t\t\tfractions\r\n\t\t\t\t.setName(Options.fractions)\r\n\t\t\t\t.setDescription(\"Ritorna il risultato come frazione (default: No)\")\r\n\t\t),\r\n\tisPublic: true,\r\n\tasync run(interaction) {\r\n\t\tawait interaction.reply(\r\n\t\t\tawait calc(\r\n\t\t\t\tthis.client,\r\n\t\t\t\tinteraction.options.getString(Options.expr, true),\r\n\t\t\t\tinteraction.options.getBoolean(Options.fractions) === true\r\n\t\t\t\t\t? \"true\"\r\n\t\t\t\t\t: \"false\"\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n};\r\n"],"mappings":"mGAAA,0DASO,GAAM,GAA0B,CACtC,KAAM,GAAI,GAAoB,EAC5B,QAAQ,MAAM,EACd,eAAe,oCAAoC,EACnD,gBAAgB,AAAC,GACjB,EACE,QAAQ,MAAY,EACpB,eAAe,4BAA4B,EAC3C,YAAY,EAAI,CACnB,EACC,iBAAiB,AAAC,GAClB,EACE,QAAQ,WAAiB,EACzB,eAAe,kDAAkD,CACpE,EACD,SAAU,GACV,KAAM,KAAI,EAAa,CACtB,KAAM,GAAY,MACjB,KAAM,GACL,KAAK,OACL,EAAY,QAAQ,UAAU,OAAc,EAAI,EAChD,EAAY,QAAQ,WAAW,WAAiB,IAAM,GACnD,OACA,OACJ,CACD,CACD,CACD","names":[]}