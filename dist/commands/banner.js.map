{"version":3,"sources":["../../src/commands/banner.ts"],"sourcesContent":["import { SlashCommandBuilder } from \"@discordjs/builders\";\r\nimport type { CommandOptions } from \"../util\";\r\nimport { banner } from \"../util\";\r\n\r\nenum Options {\r\n\tuser = \"utente\",\r\n}\r\n\r\nexport const command: CommandOptions = {\r\n\tdata: new SlashCommandBuilder()\r\n\t\t.setName(\"banner\")\r\n\t\t.setDescription(\"Mostra il banner di un utente\")\r\n\t\t.addUserOption((user) =>\r\n\t\t\tuser\r\n\t\t\t\t.setName(Options.user)\r\n\t\t\t\t.setDescription(\"L'utente di cui mostrare il banner\")\r\n\t\t),\r\n\tisPublic: true,\r\n\tasync run(interaction) {\r\n\t\tconst { id } =\r\n\t\t\tinteraction.options.getUser(Options.user) ?? interaction.user;\r\n\t\tconst [options] = await Promise.all([\r\n\t\t\tbanner(this.client, id),\r\n\t\t\tinteraction.deferReply(),\r\n\t\t]);\r\n\r\n\t\treturn void (await interaction.editReply(options));\r\n\t},\r\n};\r\n"],"mappings":"mGAAA,0DAQO,GAAM,GAA0B,CACtC,KAAM,GAAI,GAAoB,EAC5B,QAAQ,QAAQ,EAChB,eAAe,+BAA+B,EAC9C,cAAc,AAAC,GACf,EACE,QAAQ,QAAY,EACpB,eAAe,oCAAoC,CACtD,EACD,SAAU,GACV,KAAM,KAAI,EAAa,CACtB,GAAM,CAAE,MACP,EAAY,QAAQ,QAAQ,QAAY,GAAK,EAAY,KACpD,CAAC,GAAW,KAAM,SAAQ,IAAI,CACnC,EAAO,KAAK,OAAQ,CAAE,EACtB,EAAY,WAAW,CACxB,CAAC,EAED,MAAO,KAAM,MAAM,GAAY,UAAU,CAAO,CACjD,CACD","names":[]}