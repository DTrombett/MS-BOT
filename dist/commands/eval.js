import{a as u}from"../chunk-LPLALLEL.js";import{d as l}from"../chunk-X37ZX2WS.js";import{codeBlock as g}from"@discordjs/builders";import{ApplicationCommandOptionType as a,ApplicationCommandType as S}from"discord-api-types/v10";import{Colors as x,escapeCodeBlock as f}from"discord.js";import v from"node:events";import{homedir as E}from"node:os";import{join as P}from"node:path";import{performance as h}from"node:perf_hooks";import{REPL_MODE_STRICT as A,start as B}from"node:repl";import{Readable as R,Writable as b}from"node:stream";var C=new R({highWaterMark:1e6,encoding:"utf8",read:()=>{}}),I=new v({captureRejections:!0}),i=B({input:C,output:new b({defaultEncoding:"utf8",highWaterMark:1e6,decodeStrings:!1,write:(e,t,o)=>{I.emit("data",e),o()}}),prompt:"",replMode:A}),y=e=>{i.context.command=L,i.context.replServer=i,i.context.interaction=e,i.context.client=e.client},w=e=>{let{options:t}=i.writer,o=!e.guild?.presences.cache.get(e.user.id)?.clientStatus?.mobile;t.colors=o,t.showHidden=e.options.getBoolean("show-hidden")??!1,t.depth=e.options.getInteger("depth")??3,t.showProxy=e.options.getBoolean("show-proxy")??!0,t.maxArrayLength=e.options.getInteger("max-array-length")??100,t.maxStringLength=e.options.getInteger("max-string-length")??1e3,t.breakLength=o?66:39};i.setupHistory(P(E(),".node_repl_history"),e=>{e&&l.printToStderr(e)});var L=u({data:[{name:"eval",description:"Esegui del codice JavaScript",type:S.ChatInput,options:[{type:a.String,name:"code",description:"Codice da eseguire",required:!0,autocomplete:!0},{type:a.Boolean,name:"show-hidden",description:"Se mostrare le propriet\xE0 nascoste (default: false)"},{type:a.Integer,name:"depth",description:"Profondit\xE0 di esecuzione (default: 3)"},{type:a.Boolean,name:"show-proxy",description:"Se includere le propriet\xE0 proxy (default: true)"},{type:a.Integer,name:"max-array-length",description:"Il numero massimo di elementi da mostrare in un array (default: 100)"},{type:a.Integer,name:"max-string-length",description:"Il numero massimo di caratteri da mostrare in una stringa (default: 1000)"},{type:a.Boolean,name:"ephemeral",description:"Se il risultato pu\xF2 essere visto solo da te (default: true)"}]}],isPrivate:!0,async run(e){let t,o=e.options.getString("code",!0),d=h.now(),s=e.options.getBoolean("ephemeral")??!0,[c]=await Promise.all([new Promise(r=>{I.once("data",n=>{t=h.now()-d,r(typeof n=="string"?n.slice(0,-1):l.inspect(n)),delete i.context.interaction}),w(e),y(e),C.push(`${o}
`)}),e.deferReply({ephemeral:s}).catch(l.printToStderr)]);await e.editReply({content:`Eval elaborato in ${t}ms`,embeds:[{author:{name:e.user.tag,icon_url:e.user.displayAvatarURL()},title:"Eval output",description:g("ansi",f(c).slice(0,4096-11)),color:x.Blurple,timestamp:new Date().toISOString(),fields:[{name:"Input",value:g("js",f(o).slice(0,1024-9))}]}]})},async autocomplete(e){let t=e.options.getFocused(!0);if(t.name!=="code")return;if(t.value.length>100){await e.respond([]);return}w(e),y(e);let o=t.value.split(`
`),d=`${o.slice(0,-1).join(" ")} `.trim(),s=o.at(-1),c=await new Promise(r=>{i.completer(s,(n,p)=>{n?(l.printToStderr(n),r([])):r(p?.[0]??[]),delete i.context.interaction})});await e.respond(c.slice(0,25).map(r=>{let n=r;for(let m=0;m<s.length;m++)if(r.startsWith(s.slice(m))){n=`${s.slice(0,m)}${r}`;break}if(!n)return null;let p=`${d}${n}`;return p.length>100?null:{name:p,value:p}}).filter(r=>r!=null))}});export{L as command};
//# sourceMappingURL=eval.js.map